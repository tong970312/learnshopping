package com.neuedu.dao;

import com.neuedu.bean.Cart;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface CartMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cart
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cart
     *
     * @mbg.generated
     */
    int insert(Cart record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cart
     *
     * @mbg.generated
     */
    Cart selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cart
     *
     * @mbg.generated
     */
    List<Cart> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cart
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(Cart cart);

    Cart selectCartByUserIdAndProductId(@Param("userId") Integer userId,
                                        @Param("productId") Integer productId);

    /**
     * 查询用户的购物车信息
     * @param userId
     * @return
     */
    List<Cart> selectCartByUserId(Integer userId);

    /**
     * 统计用户购物信息是否全选
     * @return  >0 说明未全选
     */
    int isCheckedAll(Integer userId);

    /**
     * 删除购物车的某些商品
     */
    int deleteByUserIdAndProductIds(@Param("userId") Integer userId,
                                    @Param("productIdList") List<Integer> productIdList);

    /**
     * 操作购物车商品是否选中
     * @param userId
     * @param productId
     * @param checked 1:选中 0未选
     * @return
     */
    int selectOrUnSelectProduct(@Param("userId") Integer userId,
                                @Param("productId") Integer productId,
                                @Param("checked") Integer checked);

    /**
     * 查询购物车中商品数量
     * @param userId
     * @return
     * Integer   加入返回值为空值null, 返回值用Integer不会报错
     * ifnull(sum(quantity),0)
     */
    Integer get_cart_product_count(Integer userId);

    /**
     * 查询购物车中已选的商品
     * @param userId
     * @return
     */
    List<Cart> findCartListByUserIdAndChecked(Integer userId);

    /**
     * 批量删除(清空购物车)
     * @param cartList
     * @return
     */
    int deleteBatch(List<Cart> cartList);
}
